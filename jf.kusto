let starttime = 14d;
let timeframe = 1d;
let scorethreshold = 3;
let baselinethreshold = 25;

// Tunnettu sovellus (Azure Resource Graph), jonka toimintaan kuuluu suuri määrä Key Vault operaatioita
// Kyseinen sovellus filtteröidään pois
let Allowedappid = dynamic(["509e4652-da8d-478d-a730-e9d4a1996ca4"]);

// Seurattavat operaatiot
let OperationList = dynamic(
["SecretGet", "KeyGet", "VaultGet"]);

// Luodaan data, josta anomaliaa etsitään
let TimeSeriesData = AzureDiagnostics
| where TimeGenerated between (startofday(ago(starttime))..startofday(now()))
| where not((identity_claim_appid_g in (Allowedappid)) and OperationName == 'VaultGet')
 | where ResourceType =~ "VAULTS" and ResultType =~ "Success"
| where OperationName in (OperationList)
| extend ResultType = column_ifexists("ResultType", "None"), CallerIPAddress = column_ifexists("CallerIPAddress", "None")
| where ResultType !~ "None" and isnotempty(ResultType)
| where CallerIPAddress !~ "None" and isnotempty(CallerIPAddress)
| project TimeGenerated, OperationName, Resource, CallerIPAddress
// KQL:n sisäänrakennettu ominaisuus, joka valmistelee datan algoritmia varten
| make-series HourlyCount=count() on TimeGenerated from startofday(ago(starttime)) to startofday(now()) step timeframe by CallerIPAddress;
  
// Filtteröi anomalioiden pohjalta
let TimeSeriesAlerts = TimeSeriesData
// "series_decompose_anomalies" on KQL-kieleen sisäänrakennettu anomaliaa
// tunnistava funktio
| extend (anomalies, score, baseline) = series_decompose_anomalies(HourlyCount, scorethreshold, -1, 'linefit')
| mv-expand HourlyCount to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double),score to typeof(double), baseline to typeof(long)
| where anomalies > 0 | extend AnomalyHour = TimeGenerated
| where baseline > baselinethreshold // Filtteröidään vain useat määrät mukaan per baselinethreshold
| project CallerIPAddress, AnomalyHour, TimeGenerated, HourlyCount, baseline, anomalies, score;
let AnomalyHours = TimeSeriesAlerts | where TimeGenerated > ago(2d) | project TimeGenerated;
  
// Valitaan hälytykset tietyltä ajanjaksolta
TimeSeriesAlerts
| where TimeGenerated > ago(2d)
// Yhdistetään "normaaleihin" lokeihin, joka näyttää anomaliaa ympäröivät lokit 
| join kind = innerunique (
AzureDiagnostics
| where TimeGenerated > ago(2d)
| where not((identity_claim_appid_g in (Allowedappid)) and OperationName == 'VaultGet')
| where ResourceType =~ "VAULTS" and ResultType =~ "Success"
| where OperationName in (OperationList)
| extend DateHour = bin(TimeGenerated, 1h) 
| where DateHour in ((AnomalyHours))
| extend ResultType = column_ifexists("ResultType", "NoResultType")
| extend requestUri_s = column_ifexists("requestUri_s", "None"), 
   identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g = column_ifexists("identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g", "None"),
   identity_claim_oid_g = column_ifexists("identity_claim_oid_g", ""),
   identity_claim_upn_s = column_ifexists("identity_claim_upn_s", "")
| extend
   CallerObjectId = iff(isempty(identity_claim_oid_g), 
      identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g, 
      identity_claim_oid_g),
   CallerObjectUPN = iff(isempty(identity_claim_upn_s), 
      identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_upn_s, 
      identity_claim_upn_s)
| extend id_s = column_ifexists("id_s", "None"), CallerIPAddress = column_ifexists("CallerIPAddress", "None"), clientInfo_s = column_ifexists("clientInfo_s", "None")
| summarize PerOperationCount=count(), LatestAnomalyTime = arg_max(TimeGenerated,*) 
by bin(TimeGenerated,1h), 
   Resource, 
   OperationName, 
   id_s, 
   CallerIPAddress, 
   identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g, 
   identity_claim_oid_g, requestUri_s, clientInfo_s
) on CallerIPAddress
| extend
   CallerObjectId = iff(isempty(identity_claim_oid_g), identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g, identity_claim_oid_g),
   CallerObjectUPN = iff(isempty(identity_claim_upn_s), identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_upn_s, identity_claim_upn_s)
| summarize 
   EventCount=count(), 
   OperationNameList = make_set(OperationName,1000), 
   RequestURLList = make_set(requestUri_s, 100),
   AccountList = make_set(CallerObjectId, 100),
   AccountMax = arg_max(CallerObjectId,*) by Resource, id_s, clientInfo_s, LatestAnomalyTime
| extend timestamp = LatestAnomalyTime